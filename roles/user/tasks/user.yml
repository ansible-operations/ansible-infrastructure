---
- name: "add current user into admin"
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    shell: "{{ item.shell | default(user_default_shell) }}"
    group: "{{ ansible_user }}"
    groups: admin
    state: present
    update_password: on_create
    append: false

- name: create host appusers
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: "{{ user_default_shell }}"
    home: "{{ appuser_home }}/{{ item.name }}"
    state: present
    append: false
  with_items: "{{ host_appusers }}"
  when: host_appusers is defined

- name: set home dir permissions for appuser
  file:
    path: "{{ appuser_home }}/{{ item.name }}"
    state: directory
    mode: 0750
  with_items: "{{ host_appusers }}"
  when: host_appusers is defined

- name: create host human users
  ansible.builtin.user:
    name: "{{ item.name }}"
    password: "{{ item.password | default('!') }}"
    shell: "{{ item.shell | default(user_default_shell) }}"
    group: "{{ item.group | default(item.name) }}"
    groups: "{{ item.groups + [user_default_group.name] \
      if 'groups' in item else [user_default_group.name] }}"
    state: "{{ item.state if users_states[item.name].state == 'present' \
      else 'absent' }}"
    update_password: on_create
    append: false
  with_items: "{{ host_users }}"

- name: set home dir permissions for human users
  file:
    path: "/home/{{ item.name }}"
    state: directory
    mode: 0750
  with_items: "{{ host_users }}"

- name: set user authorized_keys
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', '../../files/public_keys/' + item.name + '.pub') }}"
    exclusive: true
    state: present
  with_items: "{{ host_users }}"
  when: item.state is not defined or item.state != 'absent'
